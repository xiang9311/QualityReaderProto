// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.xiang.proto.nano;

@SuppressWarnings("hiding")
public interface Common {

  // enum Category
  public static final int MAIN = 0;
  public static final int DEEP = 1;
  public static final int IMAGES = 2;
  public static final int PEOPLE = 3;
  public static final int FORFUN = 4;
  public static final int FOREIGN = 5;

  // enum ContentType
  public static final int BIG_IMAGE = 0;
  public static final int ARTICLE = 1;
  public static final int SHORT_ARTICLE = 2;
  public static final int IMAGE_TEXT = 3;

  public static final class RequestCommon extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RequestCommon[] _emptyArray;
    public static RequestCommon[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RequestCommon[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 userid = 1;
    public int userid;

    // optional string userkey = 2;
    public java.lang.String userkey;

    // optional int32 cmdid = 3;
    public int cmdid;

    // optional int64 timestamp = 4;
    public long timestamp;

    // optional string version = 5;
    public java.lang.String version;

    // optional int32 platform = 6;
    public int platform;

    public RequestCommon() {
      clear();
    }

    public RequestCommon clear() {
      userid = 0;
      userkey = "";
      cmdid = 0;
      timestamp = 0L;
      version = "";
      platform = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.userid != 0) {
        output.writeInt32(1, this.userid);
      }
      if (!this.userkey.equals("")) {
        output.writeString(2, this.userkey);
      }
      if (this.cmdid != 0) {
        output.writeInt32(3, this.cmdid);
      }
      if (this.timestamp != 0L) {
        output.writeInt64(4, this.timestamp);
      }
      if (!this.version.equals("")) {
        output.writeString(5, this.version);
      }
      if (this.platform != 0) {
        output.writeInt32(6, this.platform);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.userid != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.userid);
      }
      if (!this.userkey.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.userkey);
      }
      if (this.cmdid != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.cmdid);
      }
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(4, this.timestamp);
      }
      if (!this.version.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.version);
      }
      if (this.platform != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.platform);
      }
      return size;
    }

    @Override
    public RequestCommon mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.userid = input.readInt32();
            break;
          }
          case 18: {
            this.userkey = input.readString();
            break;
          }
          case 24: {
            this.cmdid = input.readInt32();
            break;
          }
          case 32: {
            this.timestamp = input.readInt64();
            break;
          }
          case 42: {
            this.version = input.readString();
            break;
          }
          case 48: {
            this.platform = input.readInt32();
            break;
          }
        }
      }
    }

    public static RequestCommon parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RequestCommon(), data);
    }

    public static RequestCommon parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RequestCommon().mergeFrom(input);
    }
  }

  public static final class ResponseCommon extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ResponseCommon[] _emptyArray;
    public static ResponseCommon[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ResponseCommon[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 code = 1;
    public int code;

    // optional string message = 2;
    public java.lang.String message;

    // optional int32 cmdid = 3;
    public int cmdid;

    // optional int64 timestamp = 4;
    public long timestamp;

    // optional int32 userid = 5;
    public int userid;

    public ResponseCommon() {
      clear();
    }

    public ResponseCommon clear() {
      code = 0;
      message = "";
      cmdid = 0;
      timestamp = 0L;
      userid = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.code != 0) {
        output.writeInt32(1, this.code);
      }
      if (!this.message.equals("")) {
        output.writeString(2, this.message);
      }
      if (this.cmdid != 0) {
        output.writeInt32(3, this.cmdid);
      }
      if (this.timestamp != 0L) {
        output.writeInt64(4, this.timestamp);
      }
      if (this.userid != 0) {
        output.writeInt32(5, this.userid);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.code != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.code);
      }
      if (!this.message.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.message);
      }
      if (this.cmdid != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.cmdid);
      }
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(4, this.timestamp);
      }
      if (this.userid != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.userid);
      }
      return size;
    }

    @Override
    public ResponseCommon mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.code = input.readInt32();
            break;
          }
          case 18: {
            this.message = input.readString();
            break;
          }
          case 24: {
            this.cmdid = input.readInt32();
            break;
          }
          case 32: {
            this.timestamp = input.readInt64();
            break;
          }
          case 40: {
            this.userid = input.readInt32();
            break;
          }
        }
      }
    }

    public static ResponseCommon parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ResponseCommon(), data);
    }

    public static ResponseCommon parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ResponseCommon().mergeFrom(input);
    }
  }

  public static final class Organize extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Organize[] _emptyArray;
    public static Organize[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Organize[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 id = 1;
    public int id;

    // optional string name = 2;
    public java.lang.String name;

    // optional string avatar = 3;
    public java.lang.String avatar;

    public Organize() {
      clear();
    }

    public Organize clear() {
      id = 0;
      name = "";
      avatar = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeInt32(1, this.id);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      if (!this.avatar.equals("")) {
        output.writeString(3, this.avatar);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (!this.avatar.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.avatar);
      }
      return size;
    }

    @Override
    public Organize mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt32();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 26: {
            this.avatar = input.readString();
            break;
          }
        }
      }
    }

    public static Organize parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Organize(), data);
    }

    public static Organize parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Organize().mergeFrom(input);
    }
  }

  public static final class ImageAndText extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ImageAndText[] _emptyArray;
    public static ImageAndText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ImageAndText[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 id = 1;
    public int id;

    // optional string imageUrl = 2;
    public java.lang.String imageUrl;

    // optional string text = 3;
    public java.lang.String text;

    public ImageAndText() {
      clear();
    }

    public ImageAndText clear() {
      id = 0;
      imageUrl = "";
      text = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeInt32(1, this.id);
      }
      if (!this.imageUrl.equals("")) {
        output.writeString(2, this.imageUrl);
      }
      if (!this.text.equals("")) {
        output.writeString(3, this.text);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
      }
      if (!this.imageUrl.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.imageUrl);
      }
      if (!this.text.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.text);
      }
      return size;
    }

    @Override
    public ImageAndText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt32();
            break;
          }
          case 18: {
            this.imageUrl = input.readString();
            break;
          }
          case 26: {
            this.text = input.readString();
            break;
          }
        }
      }
    }

    public static ImageAndText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ImageAndText(), data);
    }

    public static ImageAndText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ImageAndText().mergeFrom(input);
    }
  }

  public static final class Article extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Article[] _emptyArray;
    public static Article[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Article[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 id = 1;
    public int id;

    // optional .com.xiang.proto.Organize organize = 2;
    public com.xiang.proto.nano.Common.Organize organize;

    // optional .com.xiang.proto.ContentType contentType = 4;
    public int contentType;

    // optional int32 articleType = 5;
    public int articleType;

    // optional string title = 6;
    public java.lang.String title;

    // optional string subContent = 7;
    public java.lang.String subContent;

    // optional string content = 8;
    public java.lang.String content;

    // optional string coverUrl = 9;
    public java.lang.String coverUrl;

    // repeated .com.xiang.proto.ImageAndText imageAndTexts = 10;
    public com.xiang.proto.nano.Common.ImageAndText[] imageAndTexts;

    // optional string url = 11;
    public java.lang.String url;

    // optional .com.xiang.proto.Category category = 12;
    public int category;

    // optional string createTime = 13;
    public java.lang.String createTime;

    // optional int32 readCount = 3;
    public int readCount;

    // optional int32 shareCount = 14;
    public int shareCount;

    // optional string authorName = 15;
    public java.lang.String authorName;

    public Article() {
      clear();
    }

    public Article clear() {
      id = 0;
      organize = null;
      contentType = com.xiang.proto.nano.Common.BIG_IMAGE;
      articleType = 0;
      title = "";
      subContent = "";
      content = "";
      coverUrl = "";
      imageAndTexts = com.xiang.proto.nano.Common.ImageAndText.emptyArray();
      url = "";
      category = com.xiang.proto.nano.Common.MAIN;
      createTime = "";
      readCount = 0;
      shareCount = 0;
      authorName = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeInt32(1, this.id);
      }
      if (this.organize != null) {
        output.writeMessage(2, this.organize);
      }
      if (this.readCount != 0) {
        output.writeInt32(3, this.readCount);
      }
      if (this.contentType != com.xiang.proto.nano.Common.BIG_IMAGE) {
        output.writeInt32(4, this.contentType);
      }
      if (this.articleType != 0) {
        output.writeInt32(5, this.articleType);
      }
      if (!this.title.equals("")) {
        output.writeString(6, this.title);
      }
      if (!this.subContent.equals("")) {
        output.writeString(7, this.subContent);
      }
      if (!this.content.equals("")) {
        output.writeString(8, this.content);
      }
      if (!this.coverUrl.equals("")) {
        output.writeString(9, this.coverUrl);
      }
      if (this.imageAndTexts != null && this.imageAndTexts.length > 0) {
        for (int i = 0; i < this.imageAndTexts.length; i++) {
          com.xiang.proto.nano.Common.ImageAndText element = this.imageAndTexts[i];
          if (element != null) {
            output.writeMessage(10, element);
          }
        }
      }
      if (!this.url.equals("")) {
        output.writeString(11, this.url);
      }
      if (this.category != com.xiang.proto.nano.Common.MAIN) {
        output.writeInt32(12, this.category);
      }
      if (!this.createTime.equals("")) {
        output.writeString(13, this.createTime);
      }
      if (this.shareCount != 0) {
        output.writeInt32(14, this.shareCount);
      }
      if (!this.authorName.equals("")) {
        output.writeString(15, this.authorName);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
      }
      if (this.organize != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.organize);
      }
      if (this.readCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.readCount);
      }
      if (this.contentType != com.xiang.proto.nano.Common.BIG_IMAGE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.contentType);
      }
      if (this.articleType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.articleType);
      }
      if (!this.title.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.title);
      }
      if (!this.subContent.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.subContent);
      }
      if (!this.content.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.content);
      }
      if (!this.coverUrl.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.coverUrl);
      }
      if (this.imageAndTexts != null && this.imageAndTexts.length > 0) {
        for (int i = 0; i < this.imageAndTexts.length; i++) {
          com.xiang.proto.nano.Common.ImageAndText element = this.imageAndTexts[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(10, element);
          }
        }
      }
      if (!this.url.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.url);
      }
      if (this.category != com.xiang.proto.nano.Common.MAIN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(12, this.category);
      }
      if (!this.createTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(13, this.createTime);
      }
      if (this.shareCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(14, this.shareCount);
      }
      if (!this.authorName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(15, this.authorName);
      }
      return size;
    }

    @Override
    public Article mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt32();
            break;
          }
          case 18: {
            if (this.organize == null) {
              this.organize = new com.xiang.proto.nano.Common.Organize();
            }
            input.readMessage(this.organize);
            break;
          }
          case 24: {
            this.readCount = input.readInt32();
            break;
          }
          case 32: {
            int value = input.readInt32();
            switch (value) {
              case com.xiang.proto.nano.Common.BIG_IMAGE:
              case com.xiang.proto.nano.Common.ARTICLE:
              case com.xiang.proto.nano.Common.SHORT_ARTICLE:
              case com.xiang.proto.nano.Common.IMAGE_TEXT:
                this.contentType = value;
                break;
            }
            break;
          }
          case 40: {
            this.articleType = input.readInt32();
            break;
          }
          case 50: {
            this.title = input.readString();
            break;
          }
          case 58: {
            this.subContent = input.readString();
            break;
          }
          case 66: {
            this.content = input.readString();
            break;
          }
          case 74: {
            this.coverUrl = input.readString();
            break;
          }
          case 82: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 82);
            int i = this.imageAndTexts == null ? 0 : this.imageAndTexts.length;
            com.xiang.proto.nano.Common.ImageAndText[] newArray =
                new com.xiang.proto.nano.Common.ImageAndText[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.imageAndTexts, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.xiang.proto.nano.Common.ImageAndText();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.xiang.proto.nano.Common.ImageAndText();
            input.readMessage(newArray[i]);
            this.imageAndTexts = newArray;
            break;
          }
          case 90: {
            this.url = input.readString();
            break;
          }
          case 96: {
            int value = input.readInt32();
            switch (value) {
              case com.xiang.proto.nano.Common.MAIN:
              case com.xiang.proto.nano.Common.DEEP:
              case com.xiang.proto.nano.Common.IMAGES:
              case com.xiang.proto.nano.Common.PEOPLE:
              case com.xiang.proto.nano.Common.FORFUN:
              case com.xiang.proto.nano.Common.FOREIGN:
                this.category = value;
                break;
            }
            break;
          }
          case 106: {
            this.createTime = input.readString();
            break;
          }
          case 112: {
            this.shareCount = input.readInt32();
            break;
          }
          case 122: {
            this.authorName = input.readString();
            break;
          }
        }
      }
    }

    public static Article parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Article(), data);
    }

    public static Article parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Article().mergeFrom(input);
    }
  }

  public static final class Collect extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Collect[] _emptyArray;
    public static Collect[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Collect[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 id = 1;
    public int id;

    // optional .com.xiang.proto.Organize organize = 2;
    public com.xiang.proto.nano.Common.Organize organize;

    // optional string title = 3;
    public java.lang.String title;

    // optional string collectTime = 4;
    public java.lang.String collectTime;

    // optional int32 articleType = 5;
    public int articleType;

    // optional int32 articleId = 7;
    public int articleId;

    public Collect() {
      clear();
    }

    public Collect clear() {
      id = 0;
      organize = null;
      title = "";
      collectTime = "";
      articleType = 0;
      articleId = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeInt32(1, this.id);
      }
      if (this.organize != null) {
        output.writeMessage(2, this.organize);
      }
      if (!this.title.equals("")) {
        output.writeString(3, this.title);
      }
      if (!this.collectTime.equals("")) {
        output.writeString(4, this.collectTime);
      }
      if (this.articleType != 0) {
        output.writeInt32(5, this.articleType);
      }
      if (this.articleId != 0) {
        output.writeInt32(7, this.articleId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
      }
      if (this.organize != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.organize);
      }
      if (!this.title.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.title);
      }
      if (!this.collectTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.collectTime);
      }
      if (this.articleType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.articleType);
      }
      if (this.articleId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(7, this.articleId);
      }
      return size;
    }

    @Override
    public Collect mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt32();
            break;
          }
          case 18: {
            if (this.organize == null) {
              this.organize = new com.xiang.proto.nano.Common.Organize();
            }
            input.readMessage(this.organize);
            break;
          }
          case 26: {
            this.title = input.readString();
            break;
          }
          case 34: {
            this.collectTime = input.readString();
            break;
          }
          case 40: {
            this.articleType = input.readInt32();
            break;
          }
          case 56: {
            this.articleId = input.readInt32();
            break;
          }
        }
      }
    }

    public static Collect parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Collect(), data);
    }

    public static Collect parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Collect().mergeFrom(input);
    }
  }

  public static final class DetailUser extends
      com.google.protobuf.nano.MessageNano {

    private static volatile DetailUser[] _emptyArray;
    public static DetailUser[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new DetailUser[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 userId = 1;
    public int userId;

    // optional string userName = 2;
    public java.lang.String userName;

    // optional string avatar = 3;
    public java.lang.String avatar;

    // optional string wx_no = 4;
    public java.lang.String wxNo;

    // optional string wb_no = 5;
    public java.lang.String wbNo;

    // repeated .com.xiang.proto.Article articles = 6;
    public com.xiang.proto.nano.Common.Article[] articles;

    public DetailUser() {
      clear();
    }

    public DetailUser clear() {
      userId = 0;
      userName = "";
      avatar = "";
      wxNo = "";
      wbNo = "";
      articles = com.xiang.proto.nano.Common.Article.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.userId != 0) {
        output.writeInt32(1, this.userId);
      }
      if (!this.userName.equals("")) {
        output.writeString(2, this.userName);
      }
      if (!this.avatar.equals("")) {
        output.writeString(3, this.avatar);
      }
      if (!this.wxNo.equals("")) {
        output.writeString(4, this.wxNo);
      }
      if (!this.wbNo.equals("")) {
        output.writeString(5, this.wbNo);
      }
      if (this.articles != null && this.articles.length > 0) {
        for (int i = 0; i < this.articles.length; i++) {
          com.xiang.proto.nano.Common.Article element = this.articles[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.userId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.userId);
      }
      if (!this.userName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.userName);
      }
      if (!this.avatar.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.avatar);
      }
      if (!this.wxNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.wxNo);
      }
      if (!this.wbNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.wbNo);
      }
      if (this.articles != null && this.articles.length > 0) {
        for (int i = 0; i < this.articles.length; i++) {
          com.xiang.proto.nano.Common.Article element = this.articles[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      return size;
    }

    @Override
    public DetailUser mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.userId = input.readInt32();
            break;
          }
          case 18: {
            this.userName = input.readString();
            break;
          }
          case 26: {
            this.avatar = input.readString();
            break;
          }
          case 34: {
            this.wxNo = input.readString();
            break;
          }
          case 42: {
            this.wbNo = input.readString();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.articles == null ? 0 : this.articles.length;
            com.xiang.proto.nano.Common.Article[] newArray =
                new com.xiang.proto.nano.Common.Article[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.articles, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.xiang.proto.nano.Common.Article();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.xiang.proto.nano.Common.Article();
            input.readMessage(newArray[i]);
            this.articles = newArray;
            break;
          }
        }
      }
    }

    public static DetailUser parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new DetailUser(), data);
    }

    public static DetailUser parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new DetailUser().mergeFrom(input);
    }
  }
}
